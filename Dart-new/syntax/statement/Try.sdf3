module statement/Try

imports

  Common
  Type
  statement/Block
  
context-free syntax
  
  // Try/catch/finally statement
  Statement.Rethrow = <rethrow;>
  
  Statement.TryFinally = <try <Block> finally <Block>>
  
  Statement.TryCatch = <try <Block> <CatchClause+>>
  
  Statement.TryCatchFinally = <try <Block> <CatchClause+> finally <Block>>
  
  // Catch clause
  CatchClause.Catch = <catch(<CatchParams>) <Block>>
  
  CatchClause.On = <on <Type> <Block>>
  
  CatchClause.OnCatch = <on <Type> catch(<CatchParams>) <Block>>
  
  // Catch parameters
  CatchParams.Param = ID
  
  CatchParams.Param = <<ID>, <ID>>
  
template options

  tokenize : ";("
  keyword -/- [a-zA-Z]
