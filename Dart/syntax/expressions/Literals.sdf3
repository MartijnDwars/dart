module expressions/Literals

imports

  Common
  Type
  Expression
  
context-free syntax

  Literal.Null = "null"
  
  Literal.True = "true"
  
  Literal.False = "false"
  
  Literal.Number = NUMBER
  
  Literal.HexNumber = HEX-NUMBER
  
  Literal.String = STRING
  
  Literal.Symbol = <#<{ID "."}+>>
  
  Literal.List = <<CONST?> [<{Expression ", "}*>]>
  Literal.List = <<CONST?> [<{Expression ", "}*>, ]>
  Literal.TypedList = <<CONST?> <TypeArguments>[<{Expression ","}*>]>
  
  Literal.Map = <<CONST?> {<{MapEntry ", "}*>}>
  Literal.Map = <<CONST?> {<{MapEntry ", "}*>, }>
  Literal.TypedMap = <<CONST?> <TypeArguments> {<{MapEntry ", "}*>}>
  Literal.TypedMap = <<CONST?> <TypeArguments> {<{MapEntry ", "}*>, }>
  MapEntry.MapEntry = <<Expression>: <Expression>> 
