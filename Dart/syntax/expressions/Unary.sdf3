module expressions/Unary

imports

  Common
  expressions/AssignableExpression

context-free syntax

  // Unary postfix
  // Expression.Selector = Expression "." ID
  // Expression.ConditionalSelector = Expression "?." ID
  Expression.PostInc = AssignableExpression "++"
  Expression.PostDec = AssignableExpression "--"
  Expression.Index = Expression "[" IndexExpression "]"
  Expression.Call = Expression "(" Expression ")" // TODO: list of arguments (see spec?) TODO: deal with precedence like in Expression.Index?
  
  // Unary prefix
  Expression.Min = "-" Expression
  Expression.Neg = "!" Expression
  Expression.BitNot = "~" Expression
  Expression.PreInc = "++" AssignableExpression
  Expression.PreDec = "--" AssignableExpression
  
  // Indirection to fix precedence for Expression.Index
  IndexExpression = Expression

  // TODO: not everything in this file is unary, split this