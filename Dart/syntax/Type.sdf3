module Type

imports

  Common
  Metadata
  Type
  Parameters
  
context-free syntax
  
  // Type
  Type.VoidType = VOID
  Type.Type = <<Qualified>>
  Type.Generic = <<Qualified> <TypeArguments>>
  
  TypeArguments.TypeArguments = [<[{Type ","}+]>]
  
  // Type parameters
  TypeParameters.TypeParameters = [<[{TypeParameter ", "}+]>]
  
  TypeParameter.TypeParameter = <<Metadata> <ID>>
  TypeParameter.BoundedTypeParameter = <<Metadata> <ID> extends <Type>>
  
  // Type alias
  TypeAlias.Typealias = <<Metadata> typedef <Type?> <ID> <TypeParameters?> <Parameters>;>
  
template options

  keyword -/- [a-zA-Z]
  